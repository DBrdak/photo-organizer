AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: This template is partially managed by Amazon.Lambda.Annotations (v1.6.1.0).
Resources:
  PhotoOrganizerApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowOrigins:
          - "*"
        AllowMethods:
          - POST
        MaxAge: 600
        AllowCredentials: false
      DefaultRouteSettings:
        DetailedMetricsEnabled: true
  MicrosoftLogin:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootGet
    Properties:
      FunctionName: MicrosoftLogin
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/Admin
      PackageType: Zip
      Handler: API::API.Functions_MicrosoftLogin_Generated::MicrosoftLogin
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /microsoft/login
            Method: GET
            ApiId: !Ref PhotoOrganizerApi
  MicrosoftCallback:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootGet
    Properties:
      FunctionName: MicrosoftCallback
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/Admin
      PackageType: Zip
      Handler: API::API.Functions_MicrosoftCallback_Generated::MicrosoftCallback
      Events:
        RootGet:
          Type: HttpApi
          Properties:
              Path: /microsoft/callback
              Method: GET
              ApiId: !Ref PhotoOrganizerApi
  MicrosoftRefreshTokens:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootPut
    Properties:
      FunctionName: MicrosoftRefreshTokens
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/Admin
      PackageType: Zip
      Handler: API::API.Functions_MicrosoftRefreshTokens_Generated::MicrosoftRefreshTokens
      Events:
        RootPut:
          Type: HttpApi
          Properties:
              Path: /microsoft/tokens/refresh
              Method: PUT
              ApiId: !Ref PhotoOrganizerApi
  UploadPhoto:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootPost
    Properties:
      FunctionName: UploadPhoto
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/Admin
      PackageType: Zip
      Handler: API::API.Functions_UploadPhotoAsync_Generated::UploadPhotoAsync
      Events:
        RootPost:
          Type: HttpApi
          Properties:
            Path: /photos/new
            Method: POST
            ApiId: !Ref PhotoOrganizerApi
  GetAlbum:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootGet
    Properties:
      FunctionName: GetAlbum
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/Admin
      PackageType: Zip
      Handler: API::API.Functions_GetAlbumAsync_Generated::GetAlbumAsync
      Events:
        RootPost:
          Type: HttpApi
          Properties:
            Path: /photos/album
            Method: GET
            ApiId: !Ref PhotoOrganizerApi
  SetAlbum:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootPost
    Properties:
      FunctionName: SetAlbum
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/Admin
      PackageType: Zip
      Handler: API::API.Functions_SetAlbumAsync_Generated::SetAlbumAsync
      Events:
        RootPost:
          Type: HttpApi
          Properties:
            Path: /photos/album/new
            Method: POST
            ApiId: !Ref PhotoOrganizerApi
  ResetAlbum:
    Type: AWS::Serverless::Function
    Metadata:
      Tool: Amazon.Lambda.Annotations
      SyncedEvents:
        - RootPost
    Properties:
      FunctionName: ResetAlbum
      Runtime: dotnet8
      CodeUri: .
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/Admin
      PackageType: Zip
      Handler: API::API.Functions_ResetAlbumAsync_Generated::ResetAlbumAsync
      Events:
        RootPost:
          Type: HttpApi
          Properties:
            Path: /photos/album/reset
            Method: POST
            ApiId: !Ref PhotoOrganizerApi