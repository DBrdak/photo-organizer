AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: This template is partially managed by Amazon.Lambda.Annotations (v1.6.1.0).
Resources:
  PhotoOrganizerApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowOrigins:
        - '*'
        AllowMethods:
        - POST
        MaxAge: 600
        AllowCredentials: false
      DefaultRouteSettings:
        DetailedMetricsEnabled: true
    Metadata:
      SamResourceId: PhotoOrganizerApi
  MicrosoftLogin:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: MicrosoftLogin
      SyncedEvents:
      - RootGet
      Tool: Amazon.Lambda.Annotations
    Properties:
      FunctionName: MicrosoftLogin
      Runtime: dotnet8
      CodeUri: s3://photo.organizer/241f69a7f60bb1a28b4225789ea91a1c
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/Admin
      PackageType: Zip
      Handler: API::API.Functions_MicrosoftLogin_Generated::MicrosoftLogin
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /microsoft/login
            Method: GET
            ApiId:
              Ref: PhotoOrganizerApi
  MicrosoftCallback:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: MicrosoftCallback
      SyncedEvents:
      - RootGet
      Tool: Amazon.Lambda.Annotations
    Properties:
      FunctionName: MicrosoftCallback
      Runtime: dotnet8
      CodeUri: s3://photo.organizer/241f69a7f60bb1a28b4225789ea91a1c
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/Admin
      PackageType: Zip
      Handler: API::API.Functions_MicrosoftCallback_Generated::MicrosoftCallback
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /microsoft/callback
            Method: GET
            ApiId:
              Ref: PhotoOrganizerApi
  MicrosoftRefreshTokens:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: MicrosoftRefreshTokens
      Tool: Amazon.Lambda.Annotations
    Properties:
      FunctionName: MicrosoftRefreshTokens
      Runtime: dotnet8
      CodeUri: s3://photo.organizer/241f69a7f60bb1a28b4225789ea91a1c
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/Admin
      PackageType: Zip
      Handler: API::API.Functions_MicrosoftRefreshTokens_Generated::MicrosoftRefreshTokens
      Events:
        RemoveOldUrlsEvent:
          Type: Schedule
          Properties:
            Name: MicrosoftRefreshTokens
            Schedule: cron(0 2 * * ? *)
  UploadPhoto:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: UploadPhoto
      SyncedEvents:
      - RootPost
      Tool: Amazon.Lambda.Annotations
    Properties:
      FunctionName: UploadPhoto
      Runtime: dotnet8
      CodeUri: s3://photo.organizer/241f69a7f60bb1a28b4225789ea91a1c
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/Admin
      PackageType: Zip
      Handler: API::API.Functions_UploadPhotoAsync_Generated::UploadPhotoAsync
      Events:
        RootPost:
          Type: HttpApi
          Properties:
            Path: /photos/new
            Method: POST
            ApiId:
              Ref: PhotoOrganizerApi
  GetAlbum:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: GetAlbum
      SyncedEvents:
      - RootGet
      Tool: Amazon.Lambda.Annotations
    Properties:
      FunctionName: GetAlbum
      Runtime: dotnet8
      CodeUri: s3://photo.organizer/241f69a7f60bb1a28b4225789ea91a1c
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/Admin
      PackageType: Zip
      Handler: API::API.Functions_GetAlbumAsync_Generated::GetAlbumAsync
      Events:
        RootPost:
          Type: HttpApi
          Properties:
            Path: /photos/album
            Method: GET
            ApiId:
              Ref: PhotoOrganizerApi
  SetAlbum:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: SetAlbum
      SyncedEvents:
      - RootPost
      Tool: Amazon.Lambda.Annotations
    Properties:
      FunctionName: SetAlbum
      Runtime: dotnet8
      CodeUri: s3://photo.organizer/241f69a7f60bb1a28b4225789ea91a1c
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/Admin
      PackageType: Zip
      Handler: API::API.Functions_SetAlbumAsync_Generated::SetAlbumAsync
      Events:
        RootPost:
          Type: HttpApi
          Properties:
            Path: /photos/album/new
            Method: POST
            ApiId:
              Ref: PhotoOrganizerApi
  ResetAlbum:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: ResetAlbum
      SyncedEvents:
      - RootPost
      Tool: Amazon.Lambda.Annotations
    Properties:
      FunctionName: ResetAlbum
      Runtime: dotnet8
      CodeUri: s3://photo.organizer/241f69a7f60bb1a28b4225789ea91a1c
      MemorySize: 512
      Timeout: 30
      Role: arn:aws:iam::975049887576:role/Admin
      PackageType: Zip
      Handler: API::API.Functions_ResetAlbumAsync_Generated::ResetAlbumAsync
      Events:
        RootPost:
          Type: HttpApi
          Properties:
            Path: /photos/album/reset
            Method: POST
            ApiId:
              Ref: PhotoOrganizerApi
